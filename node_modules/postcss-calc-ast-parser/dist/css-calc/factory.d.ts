import * as AST from "../types/ast";
export declare function newPunctuator(token: AST.PunctuatorToken, before: string): AST.Punctuator;
export declare function newOperator(token: AST.OperatorToken, before: string): AST.Operator;
export declare function newString(token: AST.StringToken, before: string): AST.StringNode;
export declare function newWordNode(token: AST.WordToken, before: string): AST.NumberValue | AST.LengthValue | AST.AngleValue | AST.TimeValue | AST.FrequencyValue | AST.ResolutionValue | AST.PercentageValue | AST.FlexValue | AST.Word;
export declare function newFunction(token: AST.WordToken, before: string, open: AST.PunctuatorToken): AST.FunctionNode;
export declare function newParentheses(token: AST.PunctuatorToken, before: string): AST.Parentheses;
export declare function newMathExpression(left: AST.Expression, op: "+" | "-" | "*" | "/", right: AST.Expression): AST.MathExpression;
export declare function newMathExpression(left: AST.Expression, op: AST.Operator, right: AST.Expression): AST.MathExpression;
