import * as AST from "../types/ast";
import { Options } from "../types/options";
declare type ScanState = "SCAN" | "WORD" | "WHITESPACE" | "MINUS" | "PLUS" | "SLASH" | "COMMENT" | "DQUOTE" | "SQUOTE" | "LBRACKET" | "LBRACE" | "INLINE_COMMENT";
export declare class Tokenizer {
    private text;
    private lastCode;
    private offset;
    private rescan;
    private token;
    private nextTokenOffset;
    private lastTokenType;
    private options;
    private state;
    errors: AST.ParseError[];
    constructor(text: string, options?: Options);
    nextToken(): AST.Token | null;
    private scan;
    private next;
    private back;
    private reportParseError;
    private getCode;
    private commitToken;
    protected SCAN(cc: number): ScanState;
    private WORD;
    private LBRACKET;
    private LBRACE;
    private WHITESPACE;
    private SLASH;
    private COMMENT;
    private INLINE_COMMENT;
    private MINUS;
    private PLUS;
    private DQUOTE;
    private SQUOTE;
    private skipBrakets;
    private skipString;
}
export {};
