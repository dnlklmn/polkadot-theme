import * as AST from "./types/ast";
import { Parser, Tokenizer, Stringifier, getResolvedType, reduceExpression, newMathExpression as mathExpr } from "./css-calc";
import { Options, StringifyOptions } from "./types/options";
declare function parse(code: string, options?: Options): AST.Root;
declare function stringify(node: AST.Node | AST.Token, options?: StringifyOptions): string;
export { parse, stringify, getResolvedType, reduceExpression, mathExpr, Parser, Tokenizer, Stringifier, AST, };
declare const _default: {
    parse: typeof parse;
    stringify: typeof stringify;
    getResolvedType: typeof getResolvedType;
    reduceExpression: typeof reduceExpression;
    mathExpr: typeof mathExpr;
    Parser: typeof Parser;
    Tokenizer: typeof Tokenizer;
    Stringifier: typeof Stringifier;
    AST: typeof AST;
};
export default _default;
