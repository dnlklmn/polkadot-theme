import { SingleBorderToken, SingleBoxShadowToken, SingleCompositionToken, SingleToken, SingleTypographyToken } from '@tokens-studio/types';
export type Expandables = SingleCompositionToken | SingleTypographyToken | SingleBorderToken | SingleBoxShadowToken;
export declare const expandablesAsStringsArr: string[];
export type ExpandablesAsStrings = (typeof expandablesAsStringsArr)[number];
export type ExpandFilter<T extends SingleToken> = (token: T, filePath: string) => boolean;
export interface ExpandOptions {
    typography?: boolean | ExpandFilter<SingleTypographyToken>;
    border?: boolean | ExpandFilter<SingleBorderToken>;
    shadow?: boolean | ExpandFilter<SingleBoxShadowToken>;
    composition?: boolean | ExpandFilter<SingleCompositionToken>;
}
export interface TransformOptions {
    expand?: ExpandOptions | false;
    excludeParentKeys?: boolean;
}
