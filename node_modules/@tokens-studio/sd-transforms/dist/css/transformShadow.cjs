'use strict';

var checkAndEvaluateMath = require('../checkAndEvaluateMath.cjs');
var transformDimension = require('../transformDimension.cjs');
var transformHEXRGBa = require('./transformHEXRGBa.cjs');

/**
 * Helper: Transforms boxShadow object to shadow shorthand
 * This currently works fine if every value uses an alias,
 * but if any one of these use a raw value, it will not be transformed.
 */
function transformShadowForCSS(shadow) {
    if (typeof shadow !== 'object') {
        return shadow;
    }
    let { x, y, blur, spread } = shadow;
    const { color, type } = shadow;
    x = transformDimension.transformDimension(checkAndEvaluateMath.checkAndEvaluateMath(x));
    y = transformDimension.transformDimension(checkAndEvaluateMath.checkAndEvaluateMath(y));
    blur = transformDimension.transformDimension(checkAndEvaluateMath.checkAndEvaluateMath(blur));
    spread = transformDimension.transformDimension(checkAndEvaluateMath.checkAndEvaluateMath(spread));
    return `${type === 'innerShadow' ? 'inset ' : ''}${x} ${y} ${blur} ${spread} ${transformHEXRGBa.transformHEXRGBaForCSS(color)}`;
}

exports.transformShadowForCSS = transformShadowForCSS;
