'use strict';

var transformDimension = require('../transformDimension.cjs');
var transformFontWeights = require('../transformFontWeights.cjs');
var checkAndEvaluateMath = require('../checkAndEvaluateMath.cjs');

/**
 * Helper: Transforms typography object to typography shorthand for CSS
 * This currently works fine if every value uses an alias, but if any one of these use a raw value, it will not be transformed.
 * If you'd like to output all typography values, you'd rather need to return the typography properties itself
 */
function transformTypographyForCSS(value) {
    if (typeof value !== 'object') {
        return value;
    }
    const { fontFamily } = value;
    let { fontWeight, fontSize, lineHeight } = value;
    fontWeight = transformFontWeights.transformFontWeights(fontWeight);
    fontSize = transformDimension.transformDimension(checkAndEvaluateMath.checkAndEvaluateMath(fontSize));
    lineHeight = checkAndEvaluateMath.checkAndEvaluateMath(lineHeight);
    return `${fontWeight} ${fontSize}/${lineHeight} ${fontFamily}`;
}

exports.transformTypographyForCSS = transformTypographyForCSS;
